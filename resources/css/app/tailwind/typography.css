@plugin "@tailwindcss/typography";

/* 
    Tailwind Typography plugin variables 
    They override prose styling directly with CSS custom properties
    They don't follow the --color-* naming convention
    -tw-prose-body is in @utility, it's not part of Tailwind's core color system - it's part of the Typography plugin's internal CSS custom property system.
*/

/* 
    Make sure both variables are defined properly!

    This is correct
    --bard: light-dark(var(--color-green-600), var(--color-neutral-200));

    This breaks the light-dark() function second variable is missing --color
    --bard: light-dark(var(--color-green-600), var(--neutral-200));

    The missing --color- prefix was causing the CSS
    custom property to be invalid. When CSS encounters an invalid
    value in a light-dark() function, the entire property
    declaration becomes invalid and gets ignored, which is why it
    was falling back to the final fallback (--color-red-600).

*/

@utility prose {
    --tw-prose-body: var(--bard-body, var(--bard, var(--color-neutral-950)));
    --tw-prose-headings: var(--bard-headings, var(--bard, var(--color-neutral-950)));
    --tw-prose-lead: var(--bard-lead, var(--bard, var(--color-neutral-950)));
    --tw-prose-links: var(--bard-links, var(--bard, var(--color-neutral-950)));
    --tw-prose-bold: var(--bard-bold, var(--bard, var(--color-neutral-950)));
    --tw-prose-counters: var(--bard-counters, var(--bard, var(--color-neutral-950)));
    --tw-prose-bullets: var(--bard-bullets, var(--bard, var(--color-neutral-950)));
    --tw-prose-hr: var(--bard-hr, var(--bard, var(--color-neutral-950)));;
    --tw-prose-quotes: var(--bard-quotes, var(--bard, var(--color-neutral-950)));
    --tw-prose-quote-borders: var(--bard-quote-borders, var(--bard, var(--color-neutral-950)));
    --tw-prose-captions: var(--bard-captions, var(--bard, var(--color-neutral-950)));
    --tw-prose-code: var(--bard-code, var(--bard, var(--color-neutral-950)));
    --tw-prose-pre-code: var(--bard-pre-code, var(--bard, var(--color-neutral-950)));
    --tw-prose-pre-bg: var(--bard-pre-bg, var(--bard, var(--color-neutral-950)));
    --tw-prose-th-borders: var(--bard-th-borders, var(--bard, var(--color-neutral-950)));
    --tw-prose-td-borders: var(--bard-td-borders, var(--bard, var(--color-neutral-950)));
}

/* @utility prose-invert {
    --tw-prose-invert-body: var(--color-white);
    --tw-prose-invert-headings: var(--color-white);
    --tw-prose-invert-lead: var(--color-white);
    --tw-prose-invert-links: var(--color-white);
    --tw-prose-invert-bold: var(--color-white);
    --tw-prose-invert-counters: var(--color-white);
    --tw-prose-invert-bullets: var(--color-white);
    --tw-prose-invert-hr: var(--color-white);
    --tw-prose-invert-quotes: var(--color-white);
    --tw-prose-invert-quote-borders: var(--color-white);
    --tw-prose-invert-captions: var(--color-white);
    --tw-prose-invert-code: var(--color-white);
    --tw-prose-invert-pre-code: var(--color-white);
    --tw-prose-invert-pre-bg: var(--color-white);
    --tw-prose-invert-th-borders: var(--color-white);
    --tw-prose-invert-td-borders: var(--color-white);
} */

@layer utilities {
    .prose {
        line-height: 1.5em;

        ul > li > p,
        ol > li > p {
            margin-top: 0em !important;
            margin-bottom: 0em !important;
            line-height: 1.5em;
        }

        :where(.prose > div > :first-child) {
            margin-top: 0 !important;
        }

        :where(.prose > div > :last-child) {
            margin-bottom: 0 !important;
        }
    }

    .prose-sm,
    .prose-lg,
    .prose-xl,
    .prose-2xl {
        line-height: 1.5em;
    }

}
